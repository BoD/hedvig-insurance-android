query EmbarkStory($name: String!) {
  embarkStory(name: $name) {
    startPassage
    passages {
      name
      id
      messages {
        ...MessageFragment
      }
      response {
        ...MessageFragment
      }
      redirects {
        ... on EmbarkRedirectUnaryExpression {
          unaryType: type
          to
          passedExpressionKey
          passedExpressionValue
        }
        ... on EmbarkRedirectBinaryExpression {
          binaryType: type
          to
          key
          value
          passedExpressionKey
          passedExpressionValue
        }
        ... on EmbarkRedirectMultipleExpressions {
          multipleExpressionType: type
          to
          passedExpressionKey
          passedExpressionValue
          subExpressions {
            ...SubExpressionFragment
          }
        }
      }
      action {
        ... on EmbarkSelectAction {
          data {
            options {
              link {
                name
                label
              }
              keys
              values
            }
          }
        }
        ... on EmbarkTextAction {
          data {
            key
            link {
              name
              label
            }
            placeholder
          }
        }
      }
    }
  }
}

fragment MessageFragment on EmbarkMessage {
  expressions {
    ... on EmbarkExpressionUnary {
      unaryType: type
      text
    }
    ... on EmbarkExpressionBinary {
      binaryType: type
      key
      value
      text
    }
    ... on EmbarkExpressionMultiple {
      multipleType: type
      text
      subExpressions {
        ...SubExpressionFragment
      }
    }
  }
  text
}

fragment SubExpressionFragment on EmbarkExpression {
  ... on EmbarkExpressionUnary {
    unaryType: type
    text
  }
  ... on EmbarkExpressionBinary {
    binaryType: type
    key
    value
    text
  }
  ... on EmbarkExpressionMultiple {
    multipleType: type
    text
    subExpressions {
      ... on EmbarkExpressionUnary {
        unaryType: type
        text
      }
      ... on EmbarkExpressionBinary {
        binaryType: type
        key
        value
        text
      }
    }
  }
}
